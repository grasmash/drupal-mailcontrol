<?php

/**
 * Implements hook_help().
 */
function mailcontrol_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#mailcontrol':
      return '<p>' . t('This small module extends original Drupal 7 account settings page with the ability to turn OFF all standard mails.</br> 
      This can be usefull when you are sending mails through some external services or for development purposes, etc.</br>  
      You can access these settings under <a href="@conf_url">admin/config/people/accounts</a>.', array('@conf_url' => url('admin/config/people/accounts'))) . '</p>';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * add the enable/disable option to all standard drupal mails
 * TODO: rewrite this to be generally applicable
 */
function mailcontrol_form_user_admin_settings_alter(&$form, &$form_state, $form_id) {
  /**
   * Welcome (new user created by administrator)
   */
  $form['email_admin_created']['user_mail_register_admin_created_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Notify new user when account created by admin.'),
    '#default_value' => variable_get('user_mail_register_admin_created_notify', 1),
    '#weight' => -10,
  );
  
  $form['email_admin_created']['settings'] = array(
    '#type' => 'container',
    '#states' => array(
      // Hide the additional settings when this email is disabled.
      'invisible' => array(
        'input[name="user_mail_register_admin_created_notify"]' => array('checked' => FALSE),
      ),
    ),
  );
  
  $form['email_admin_created']['settings'][] = 
    $form['email_admin_created']['user_mail_register_admin_created_subject'];
  unset($form['email_admin_created']['user_mail_register_admin_created_subject']);
  
  $form['email_admin_created']['settings'][] = 
    $form['email_admin_created']['user_mail_register_admin_created_body'];
  unset($form['email_admin_created']['user_mail_register_admin_created_body']);
  
  /**
   *  Welcome (awaiting approval)
   */
  $form['email_pending_approval']['user_mail_register_pending_approval_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Notify new user when account was approved.'),
    '#default_value' => variable_get('user_mail_register_pending_approval_notify', 1),
    '#weight' => -10,
  );
  
  $form['email_pending_approval']['settings'] = array(
    '#type' => 'container',
    '#states' => array(
      // Hide the additional settings when this email is disabled.
      'invisible' => array(
        'input[name="user_mail_register_pending_approval_notify"]' => array('checked' => FALSE),
      ),
    ),
  );
  
  $form['email_pending_approval']['settings'][] = 
    $form['email_pending_approval']['user_mail_register_pending_approval_subject'];
  unset($form['email_pending_approval']['user_mail_register_pending_approval_subject']);
  
  $form['email_pending_approval']['settings'][] = 
    $form['email_pending_approval']['user_mail_register_pending_approval_body'];
  unset($form['email_pending_approval']['user_mail_register_pending_approval_body']);
  
  /**
   * Welcome (no approval required)
   */
  $form['email_no_approval_required']['user_mail_register_no_approval_required_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Notify new user when account created.'),
    '#default_value' => variable_get('user_mail_register_no_approval_required_notify', 1),
    '#weight' => -10,
  );
  
  $form['email_no_approval_required']['settings'] = array(
    '#type' => 'container',
    '#states' => array(
      // Hide the additional settings when this email is disabled.
      'invisible' => array(
        'input[name="user_mail_register_no_approval_required_notify"]' => array('checked' => FALSE),
      ),
    ),
  );
  
  $form['email_no_approval_required']['settings'][] = 
    $form['email_no_approval_required']['user_mail_register_no_approval_required_subject'];
  unset($form['email_no_approval_required']['user_mail_register_no_approval_required_subject']);
  
  $form['email_no_approval_required']['settings'][] = 
    $form['email_no_approval_required']['user_mail_register_no_approval_required_body'];
  unset($form['email_no_approval_required']['user_mail_register_no_approval_required_body']);
  
  /**
   * Password recovery
   */
  $form['email_password_reset']['user_mail_password_reset_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Notify user after password reset.'),
    '#default_value' => variable_get('user_mail_password_reset_notify', 1),
    '#weight' => -10,
  );
  
  $form['email_password_reset']['settings'] = array(
    '#type' => 'container',
    '#states' => array(
      // Hide the additional settings when this email is disabled.
      'invisible' => array(
        'input[name="user_mail_password_reset_notify"]' => array('checked' => FALSE),
      ),
    ),
  );
  
  $form['email_password_reset']['settings'][] = 
    $form['email_password_reset']['user_mail_password_reset_subject'];
  unset($form['email_password_reset']['user_mail_password_reset_subject']);
  
  $form['email_password_reset']['settings'][] = 
    $form['email_password_reset']['user_mail_password_reset_body'];
  unset($form['email_password_reset']['user_mail_password_reset_body']);
  
  /**
   * Account cancellation confirmation
   */
  $form['email_cancel_confirm']['user_mail_cancel_confirm_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Notify user when account is being cancelled.'),
    '#default_value' => variable_get('user_mail_cancel_confirm_notify', 1),
    '#weight' => -10,
  );
  
  $form['email_cancel_confirm']['settings'] = array(
    '#type' => 'container',
    '#states' => array(
      // Hide the additional settings when this email is disabled.
      'invisible' => array(
        'input[name="user_mail_cancel_confirm_notify"]' => array('checked' => FALSE),
      ),
    ),
  );
  
  $form['email_cancel_confirm']['settings'][] = 
    $form['email_cancel_confirm']['user_mail_cancel_confirm_subject'];
  unset($form['email_cancel_confirm']['user_mail_cancel_confirm_subject']);
  
  $form['email_cancel_confirm']['settings'][] = 
    $form['email_cancel_confirm']['user_mail_cancel_confirm_body'];
  unset($form['email_cancel_confirm']['user_mail_cancel_confirm_body']);
}
